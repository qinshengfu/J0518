<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Account_dataMapper">

    <!--表名 -->
    <sql id="tableName">
		"FT_ACCOUNT_DATA"
	</sql>

    <!-- 字段 -->
    <sql id="Field">
		"GMT_CREATE",	
		"GMT_MODIFIED",	
		"PHONE",	
		"USER_ID",	
		"FULL_NAME",	
		"FRONT_OF_ID",	
		"BACK_OF_ID",	
		"SECURITY_QUESTION",	
		"SECURITY_ANSWER",	
		"WALLET_ADDRESS",	
		"ID_CARD_NO",	
		"USER_PORTRAIT",
		"ACCOUNT_DATA_ID"
	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
			#{GMT_CREATE},	
			#{GMT_MODIFIED},	
			#{PHONE},	
			#{USER_ID},	
			#{FULL_NAME},	
			#{FRONT_OF_ID},	
			#{BACK_OF_ID},	
			#{SECURITY_QUESTION},	
			#{SECURITY_ANSWER},	
			#{WALLET_ADDRESS},	
			#{ID_CARD_NO},	
			#{USER_PORTRAIT},
			#{ACCOUNT_DATA_ID}
	</sql>

    <!-- 新增-->
    <insert id="save" parameterType="pd">

        /* 返回 主键ID*/
        <selectKey keyProperty="ACCOUNT_DATA_ID" order="BEFORE" resultType="java.lang.Integer">
            select FT_ACCOUNT_DATA_SEQ.NEXTVAL as ACCOUNT_DATA_ID from DUAL
        </selectKey>

        insert into
        <include refid="tableName"/>
        (
        <include refid="Field"/>
        ) values (
        <include refid="FieldValue"/>
        )
    </insert>

    <!-- 删除-->
    <delete id="delete" parameterType="pd">
        delete from
        <include refid="tableName"/>
        where
        "ACCOUNT_DATA_ID" = #{ACCOUNT_DATA_ID}
    </delete>

    <!-- 清空数据 -->
    <delete id="deleteAllData" parameterType="pd">
        delete from
        <include refid="tableName"/>
        where
        "ACCOUNT_DATA_ID" != '1'
    </delete>

    <!-- 修改 -->
    <update id="edit" parameterType="pd">
        update
        <include refid="tableName"/>
        set
        <foreach item="item" collection="_parameter.keys"
                 separator="," close="">
            ${item} = #{[${item}]}
        </foreach>
        where
        "ACCOUNT_DATA_ID" = #{ACCOUNT_DATA_ID}
    </update>

    <!-- 根据用户ID修改 -->
    <update id="editByUserId" parameterType="pd">
        update
        <include refid="tableName"/>
        set
        <foreach item="item" collection="_parameter.keys"
                 separator="," close="">
            ${item} = #{[${item}]}
        </foreach>
        where
        "USER_ID" = #{USER_ID}
    </update>

    <!-- 通过ID获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where
        "ACCOUNT_DATA_ID" = #{ACCOUNT_DATA_ID}
    </select>

    <!-- 通过用户资料获取数据判断是否重复 -->
    <select id="findByUserData" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        "PHONE" = #{PHONE}
        and "FULL_NAME" = #{FULL_NAME}
        and "ID_CARD_NO" = #{ID_CARD_NO}
        and "WALLET_ADDRESS" = #{WALLET_ADDRESS}
    </select>

    <!-- 通过用户ID获取数据 -->
    <select id="findByUserId" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where
        "USER_ID" = #{USER_ID}
    </select>

    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where 1=1
        <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            <!--	根据需求自己加检索条件 -->
                "PHONE" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                "FULL_NAME" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                "SECURITY_QUESTION" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                "SECURITY_ANSWER" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                "WALLET_ADDRESS" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                "ID_CARD_NO" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            )
        </if>
        /*时间段搜索*/
        <if test="pd.lastStart != null and pd.lastStart != '' ">
            and "GMT_CREATE" &gt;= #{pd.lastStart}
        </if>
        <if test="pd.lastEnd!= null and pd.lastEnd != '' ">
            and "GMT_CREATE" &lt;= ( SELECT TO_CHAR(( SELECT to_date( #{pd.lastEnd}, 'yyyy-mm-dd' ) + 1 FROM dual ),
            'yyyy-mm-dd' ) FROM dual )
        </if>
        ORDER BY "GMT_CREATE" DESC
    </select>

    <!-- 列表(全部) -->
    <select id="listAll" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
    </select>

    <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        "ACCOUNT_DATA_ID" in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- fh313596790qq(青苔) -->
</mapper>