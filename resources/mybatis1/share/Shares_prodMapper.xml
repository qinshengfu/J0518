<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Shares_prodMapper">

    <!--表名 -->
    <sql id="tableName">
		"FT_SHARES_PROD"
	</sql>

    <!-- 字段 -->
    <sql id="Field">
		"GMT_CREATE",
		"GMT_MODIFIED",
		"DELETE_TIME",
		"PROD_NAME",
		"UNIT",
		"PRICE",
		"STATUS",
		"TYPE",
		"TOTAL",
		"REMAINDER",
		"SEQ",
		"NUMBER_CODE",
		"WAVE",
		"RANGE",
		"SLIP_POINT",
		"ORI_PRICE",
		"MAX_PRICE",
		"MIN_PRICE",
		"OPEN_PRICE",
		"CLOSING_PRICE",
		"SHARES_PROD_ID"
	</sql>

    <!-- 字段值 -->
    <sql id="FieldValue">
			#{GMT_CREATE},
			#{GMT_MODIFIED},
			#{DELETE_TIME},
			#{PROD_NAME},
			#{UNIT},
			#{PRICE},
			#{STATUS},
			#{TYPE},
			#{TOTAL},
			#{REMAINDER},
			#{SEQ},
			#{NUMBER_CODE},
			#{WAVE},
			#{RANGE},
			#{SLIP_POINT},
			#{ORI_PRICE},
			#{MAX_PRICE},
			#{MIN_PRICE},
			#{OPEN_PRICE},
			#{CLOSING_PRICE},
			#{SHARES_PROD_ID}
	</sql>

    <!-- 新增-->
    <insert id="save" parameterType="pd">

        /* 返回 主键ID*/
        <selectKey keyProperty="SHARES_PROD_ID" order="BEFORE" resultType="java.lang.Integer">
            select FT_SHARES_PROD_SEQ.NEXTVAL as SHARES_PROD_ID from DUAL
        </selectKey>

        insert into
        <include refid="tableName"></include>
        (
        <include refid="Field"></include>
        ) values (
        <include refid="FieldValue"></include>
        )
    </insert>

    <!-- 删除-->
    <delete id="delete" parameterType="pd">
        delete from
        <include refid="tableName"></include>
        where
        "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </delete>

    <!-- 修改 -->
    <update id="edit" parameterType="pd">
        update
        <include refid="tableName"/>
        set
        <foreach item="item" collection="_parameter.keys"
                 separator="," close="">
            <if test="item != null and item != '' ">
                ${item} = #{[${item}]}
            </if>
        </foreach>
        where
        "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </update>

    <!-- 增加库存 -->
    <update id="addStock" parameterType="pd">
        update
        <include refid="tableName"/>
        set
        "REMAINDER" = "REMAINDER" + #{num}
        where
        "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </update>

    <!-- 减少库存 -->
    <update id="lessStock" parameterType="pd">
        update
        <include refid="tableName"/>
        set
        "REMAINDER" = "REMAINDER" - #{num}
        where
        "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </update>

    <!-- 通过ID获取数据 -->
    <select id="findById" parameterType="pd" resultType="pd">
        select
        <include refid="Field"></include>
        from
        <include refid="tableName"></include>
        where
        "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </select>

    <!-- 通过id获取当日成交量 -->
    <select id="getDayVolumeById" parameterType="pd" resultType="pd">
        SELECT
        NVL( SUM( REMAINDER ), 0 )  as DAY_VOLUME
        FROM
        "FT_SHARES_ORDER"
        WHERE
        ( EVENT = '交易成功' OR EVENT = '购买限量发售股票' )
        AND "GMT_CREATE" >= (SELECT	TO_CHAR(SYSDATE, 'yyyy-mm-dd' ) FROM	dual)
        AND "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </select>

    <!-- 通过id获取当日交易额 -->
    <select id="getDayTradingById" parameterType="pd" resultType="pd">
        SELECT
        NVL( SUM(PRICE *  REMAINDER), 0 )  as DAY_TRADING
        FROM
        "FT_SHARES_ORDER"
        WHERE
        ( EVENT = '交易成功' OR EVENT = '购买限量发售股票' )
        AND "GMT_CREATE" >= (SELECT	TO_CHAR(SYSDATE, 'yyyy-mm-dd' ) FROM	dual)
        AND "SHARES_PROD_ID" = #{SHARES_PROD_ID}
    </select>

    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where 1=1
        <if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
            and
            (
            <!--	根据需求自己加检索条件  -->
            "PROD_NAME" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "PRICE" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "STATUS" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "TYPE" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "NUMBER_CODE" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "TOTAL" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "REMAINDER" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            or
            "OPEN_PRICE" LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')

            )
        </if>
        /*时间段搜索*/
        <if test="pd.lastStart != null and pd.lastStart != '' ">
            and "GMT_CREATE" &gt;= #{pd.lastStart}
        </if>
        <if test="pd.lastEnd!= null and pd.lastEnd != '' ">
            and "GMT_CREATE" &lt;= ( SELECT TO_CHAR(( SELECT to_date( #{pd.lastEnd}, 'yyyy-mm-dd' ) + 1 FROM dual ),
            'yyyy-mm-dd' ) FROM dual )
        </if>
        order by "SEQ"
    </select>

    <!-- 列表(全部) -->
    <select id="listAll" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        order by "SEQ"
    </select>

    <!-- 列表(查询库存大于0的 -->
    <select id="listAllByNum" parameterType="pd" resultType="pd">
        select
        <include refid="Field"/>
        from
        <include refid="tableName"/>
        where "REMAINDER" &gt; 0
        order by "SEQ"
    </select>

    <!-- 批量删除 -->
    <delete id="deleteAll" parameterType="String">
        delete from
        <include refid="tableName"></include>
        where
        "SHARES_PROD_ID" in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- fh313596790qq(青苔) -->
</mapper>